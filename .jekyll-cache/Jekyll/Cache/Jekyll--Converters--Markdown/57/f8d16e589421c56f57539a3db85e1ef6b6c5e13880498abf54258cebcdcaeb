I"¡<p>La vulnerabilidad ‚ÄòLocal File Inclusion‚Äô, o en sus siglas ‚ÄòLFI‚Äô, permite a un atacante leer archivos del servidor vulnerable. Esta afecci√≥n se produce debido a malas pr√°cticas durante la programaci√≥n de una p√°gina web.</p>

<p>Dependiendo de la importancia, esta vulnerabilidad puede llevar al atacante a:</p>

<ul>
  <li>RCE (Remote Code Execution)</li>
  <li>XSS (Cross-Site Scripting)</li>
  <li>DoS (Denial Of Service)</li>
</ul>

<p>Un ejemplo muy b√°sico ser√≠a el siguiente script de PHP:</p>

<div class="language-php highlighter-rouge"><div class="highlight"><pre class="highlight"><code><span class="cp">&lt;?php</span>
	<span class="nv">$file</span> <span class="o">=</span> <span class="nv">$_GET</span><span class="p">[</span><span class="s1">'filename'</span><span class="p">];</span>
	<span class="k">include</span><span class="p">(</span><span class="nv">$file</span><span class="p">);</span>
<span class="cp">?&gt;</span>
</code></pre></div></div>

<p>Donde podemos leer cualquier archivo del sistema, en este caso el ‚Äò/etc/passwd‚Äô</p>

<div class="language-plaintext highlighter-rouge"><div class="highlight"><pre class="highlight"><code>https://localhost/lfi.php?filename=/etc/passwd
</code></pre></div></div>

<p>Es importante aclarar que esta no es solo una vulnerabilidad de PHP, tambi√©n est√° presente en otros lenguajes como lo es JSP o ASP.</p>

<h3 id="directory-path-traversal"><a href="#header-3"></a>Directory Path Traversal</h3>

<p>Es posible que en el c√≥digo se nos limite a acceder a archivos que se ubican √∫nicamente en la ruta establecida, en este caso ‚Äò/var/www/html/‚Äô.</p>

<div class="language-php highlighter-rouge"><div class="highlight"><pre class="highlight"><code><span class="cp">&lt;?php</span>
	<span class="nv">$file</span> <span class="o">=</span> <span class="nv">$_GET</span><span class="p">[</span><span class="s1">'filename'</span><span class="p">];</span>
	<span class="k">include</span><span class="p">(</span><span class="s2">"/var/www/html/"</span> <span class="mf">.</span> <span class="nv">$file</span><span class="p">);</span>
<span class="cp">?&gt;</span>
</code></pre></div></div>

<p>Sin embargo, podemos ‚Äúescaparnos‚Äù de la ruta establecida si a√±adimos ‚Äò../‚Äô, pudiendo as√≠ listar contenido m√°s all√° de ‚Äò/var/www/html/‚Äô.</p>

<div class="language-plaintext highlighter-rouge"><div class="highlight"><pre class="highlight"><code>https://localhost/lfi.php?filename=../../../etc/passwd
</code></pre></div></div>

<h3 id="null-byte"><a href="#header-3"></a>Null Byte</h3>

<p>De igual manera, es posible que en el c√≥digo se nos limite a acceder a archivos con √∫nicamente de la extensi√≥n establecida, en este caso ‚ÄòPHP‚Äô.</p>

<div class="language-php highlighter-rouge"><div class="highlight"><pre class="highlight"><code><span class="cp">&lt;?php</span>
	<span class="nv">$file</span> <span class="o">=</span> <span class="nv">$_GET</span><span class="p">[</span><span class="s1">'filename'</span><span class="p">];</span>
        <span class="k">require</span><span class="p">(</span><span class="nv">$file</span> <span class="mf">.</span> <span class="s2">".php"</span><span class="p">);</span>
<span class="cp">?&gt;</span>
</code></pre></div></div>

<p>De modo que cuando intentemos leer el archivo ‚Äò/etc/passwd‚Äô, o cualquier otro archivo, lo que estariamos leyendo en realidad ser√≠a el archivo ‚Äò/etc/passwd.php‚Äô, el cual no existe. Sin embargo, si a√±adimos el nullbyte (%00) al final de nuestra cadena de ataque, el ‚Äò.php‚Äô no ser√° tenido en cuenta.</p>

<div class="language-plaintext highlighter-rouge"><div class="highlight"><pre class="highlight"><code>https://localhost/lfi.php?filename=/etc/passwd%00
</code></pre></div></div>

<h3 id="wrappers"><a href="#header-3"></a>Wrappers</h3>

<p>PHP cuenta con una serie de ‚Äúwrappers‚Äù, los cuales a menudo pueden ser abusados, por mencionar algunos tenemos:</p>

<h4 id="expect"><a href="#header-4"></a>expect://</h4>

<p>Nos permite una ejecuci√≥n remota de comandos (RCE).</p>

<div class="language-plaintext highlighter-rouge"><div class="highlight"><pre class="highlight"><code>https://localhost/lfi.php?filename=expect://whoami
</code></pre></div></div>

<h4 id="filter"><a href="#header-4"></a>filter://</h4>

<p>Nos permite codificar archivos del sistema a trav√©s de diferentes m√©todos como podr√≠a ser Base64 o ROT13. Es bastante √∫til si necesitamos leer un archivo en PHP, ya que recordemos, este es un lenguaje interpretado, por lo que si intentamos leer un archivo PHP, no ver√≠amos nada.</p>

<div class="language-plaintext highlighter-rouge"><div class="highlight"><pre class="highlight"><code>https://localhost/lfi.php?filename=php://filter/convert.base64-encode/resource=test.php
</code></pre></div></div>
:ET